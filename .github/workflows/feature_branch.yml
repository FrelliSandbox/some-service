name: Feature Branch CI Pipeline

on:
  push:
    branches-ignore: [ main ]

jobs:
  main:
    name: Feature Branch CI
    runs-on: ubuntu-latest
    steps:

      - name: Set Version
        run: |
          echo "project_version=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache Maven Repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Compile
        run: mvn -B clean compile -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify
        run: mvn -B verify

      - name: Docker Build & Push
        run: |
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
          IMAGE_NAME=$(echo ghcr.io/${{ github.repository }}:${{ env.project_version }} | awk '{print tolower($0)}')
          echo ${IMAGE_NAME}
          mvn -B spring-boot:build-image -DskipTests -Drevision=${{ env.project_version }}-SNAPSHOT -Dspring-boot.build-image.imageName=${IMAGE_NAME}
          docker push ${IMAGE_NAME}

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v1

      - name: Terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform -chdir=terraform init
          terraform -chdir=terraform plan -no-color
